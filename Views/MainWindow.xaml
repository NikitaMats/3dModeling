<Window x:Class="TestCase_Sputnik.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:TestCase_Sputnik"
        xmlns:models="clr-namespace:TestCase_Sputnik.Models"
        xmlns:converters="clr-namespace:TestCase_Sputnik.Converters"
        Title="3D Model Visualizer" 
        Height="600" 
        Width="800">

    <Window.Resources>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>

        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Background" Value="#FFDDDDDD"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="10">

                <GroupBox Header="Transformations" Margin="0,0,0,15">
                    <StackPanel>

                        <Expander Header="Translation">
                            <StackPanel>
                                <TextBlock Text="X:" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.TranslateX, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Y:" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.TranslateY, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Z:" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.TranslateZ, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Content="Apply" Command="{Binding TranslateCommand}"/>
                            </StackPanel>
                        </Expander>

                        <Expander Header="Mirror">
                            <StackPanel>
                                <Button Content="Mirror XY" Command="{Binding MirrorXYCommand}" Margin="0,5"/>
                                <Button Content="Mirror XZ" Command="{Binding MirrorXZCommand}" Margin="0,5"/>
                                <Button Content="Mirror YZ" Command="{Binding MirrorYZCommand}" Margin="0,5"/>
                            </StackPanel>
                        </Expander>

                        <Expander Header="Rotation">
                            <StackPanel>
                                <TextBlock Text="X Angle (deg):" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.RotateX, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Content="Rotate X" Command="{Binding RotateXCommand}" Margin="0,5"/>

                                <TextBlock Text="Y Angle (deg):" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.RotateY, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Content="Rotate Y" Command="{Binding RotateYCommand}" Margin="0,5"/>

                                <TextBlock Text="Z Angle (deg):" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.RotateZ, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Content="Rotate Z" Command="{Binding RotateZCommand}" Margin="0,5"/>
                            </StackPanel>
                        </Expander>

                        <Expander Header="Scale">
                            <StackPanel>
                                <TextBlock Text="Scale Factor:" Margin="5,5,5,0"/>
                                <TextBox Text="{Binding Transformations.Scale, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" />
                                <Button Content="Apply Scale" Command="{Binding ScaleCommand}"/>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Projection" Margin="0,0,0,15">
                    <StackPanel>
                        <RadioButton Content="Perspective" 
                            IsChecked="{Binding SelectedProjection, 
                            Converter={StaticResource EnumToBooleanConverter}, 
                            ConverterParameter={x:Static models:ProjectionType.Perspective}}"/>
                        <RadioButton Content="Orthographic" 
                            IsChecked="{Binding SelectedProjection, 
                            Converter={StaticResource EnumToBooleanConverter}, 
                            ConverterParameter={x:Static models:ProjectionType.Orthographic}}"/>
                        <RadioButton Content="Front View" 
                            IsChecked="{Binding SelectedProjection, 
                            Converter={StaticResource EnumToBooleanConverter}, 
                            ConverterParameter={x:Static models:ProjectionType.OrthographicFront}}"/>
                    </StackPanel>
                </GroupBox>

                <Button Content="Reset All" Command="{Binding ResetCommand}" Margin="0,10" Background="#FFE74C3C" Foreground="White"/>
            </StackPanel>
        </ScrollViewer>

        <Border Grid.Column="1" BorderBrush="Gray" BorderThickness="1">
            <Viewport3D x:Name="Viewport">

                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup>
                            <AmbientLight Color="#FF404040"/>
                            <DirectionalLight Color="#FFC0C0C0" Direction="-1,-1,-1"/>
                            <DirectionalLight Color="#FF404040" Direction="1,1,1"/>
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>
        </Border>
    </Grid>
</Window>